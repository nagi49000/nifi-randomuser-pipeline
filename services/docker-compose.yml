# docker-compose inspired by
#   CribberSix https://gist.github.com/CribberSix/260f130f2936e97ed2d0fef0df08874d
#   https://medium.com/analytics-vidhya/setting-apache-nifi-on-docker-containers-a00e862a8399

version: "2.2"
services:

  nifi:
    build:
      context: ./nifi-cypher
      dockerfile: Dockerfile
    ports:
      - "8091:8080"
      - "8443:8443"
    #volumes:
      #- "./nifi-data:/opt/nifi/nifi-current/ls-target"
    environment:
      # commenting this line out will convert the nifi web server to serve on https...
      - NIFI_WEB_HTTP_PORT=8080
      # ... in which case these creds can be used to access over https
      # - SINGLE_USER_CREDENTIALS_USERNAME=admin
      # - SINGLE_USER_CREDENTIALS_PASSWORD=letadminintonifi
    depends_on:
      - nifi-registry
    # uncomment volumes for persistence
    #volumes:
      #- ./nifi/database_repository:/opt/nifi/nifi-current/database_repository
      #- ./nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      #- ./nifi/content_repository:/opt/nifi/nifi-current/content_repository
      #- ./nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      #- ./nifi/state:/opt/nifi/nifi-current/state
      #- ./nifi/logs:/opt/nifi/nifi-current/logs
      # uncomment the next line after copying the /conf directory from the container to your local directory to persist NiFi flows
      #- ./nifi/conf:/opt/nifi/nifi-current/conf
    links:
      - "nifi-registry:nifi-reg"
      # allows making connections via cypher-shell as $ cypher-shell --address neo4j://neo4j:7687
      - "neo4j:neo4j"

  nifi-registry:
    image: apache/nifi-registry:1.16.2
    # uncomment volumes for persistentce
    #volumes:
      #- ./nifi-registry/database:/opt/nifi-registry/nifi-registry-current/database
      #- ./nifi-registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
    ports:
      - "18080:18080"

  nipyapi-demo:
    build:
      context: ./python-demo-setup
      dockerfile: Dockerfile
    depends_on:
      - nifi-registry
      - nifi
    environment:
      - NIFI_FORCE_PROCESSOR_CLEAN=TRUE
    links:
      - "nifi-registry:registry"
      - "nifi:nifi"

  neo4j:
    # tested on neo4j version 4.4.4
    image: neo4j:4.4.4-community
    # restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    # uncomment volumes for persistence
    #volumes:
      #- ./conf:/conf
      #- ./data:/data
      #- ./import:/import
      #- ./logs:/logs
      #- ./plugins:/plugins
    environment:
      # Raise memory limits
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=4G
      - NEO4J_dbms_memory_heap_max__size=4G
      # - NEO4J_USERNAME=neo4j
      # - NEO4J_PASSWORD=neo4j
      # hack on disabling username/password for demo purposes
      - NEO4J_dbms_security_auth__enabled=false
